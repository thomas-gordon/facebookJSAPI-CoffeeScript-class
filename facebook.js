// Generated by CoffeeScript 1.6.1
(function() {
  "use strict";
  var App, Facebook,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Facebook = (function() {

    function Facebook() {}

    Facebook.prototype.loginStatus = function(callback) {
      return FB.getLoginStatus(function(response) {
        if (response.status === 'connected') {
          return callback('connected');
        } else if (response.status === 'not_authorized') {
          return callback('not authorized');
        } else {
          return callback('not logged in');
        }
      });
    };

    Facebook.prototype.login = function(callback) {
      var _this = this;
      return FB.login(function(response) {
        if (response.authResponse) {
          return callback(true);
        } else {
          return callback(false);
        }
      }, {
        scope: this.fbPermissions
      });
    };

    Facebook.prototype.logout = function(callback) {
      var _this = this;
      return FB.logout(function(response) {
        if (response.authResponse) {
          return callback(true);
        } else {
          return callback(false);
        }
      });
    };

    Facebook.prototype.feed = function(link, picture, name, caption, description, callback) {
      return FB.ui({
        method: 'feed',
        link: this.fbFeed.link || link,
        picture: this.fbFeed.picture || picture,
        name: this.fbFeed.name || name,
        caption: this.fbFeed.caption || caption,
        description: this.fbFeed.description || description
      }, function(response) {
        return callback(response);
      });
    };

    Facebook.prototype.apprequests = function(callback) {
      return FB.ui({
        method: 'apprequests',
        message: this.fbAppRequests.message
      }, function(response) {
        return callback(response);
      });
    };

    return Facebook;

  })();

  App = (function(_super) {

    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.init = function() {
      this.fbPermissions = 'email';
      this.fbAppRequests = {
        message: 'test'
      };
      this.fbFeed = {
        link: 'http://www.google.com',
        picture: 'XX',
        name: 'XX',
        caption: 'XX',
        description: 'XX'
      };
      return this.apprequests(function(response) {
        return console.log(response);
      });
    };

    return App;

  })(Facebook);

  $(document).bind('FBSDKLoaded', function() {
    var app;
    app = new App;
    return app.init();
  });

}).call(this);
